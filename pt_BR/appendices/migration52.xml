<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 350644 Maintainer: ae Status: ready --><!-- CREDITS: gabriel@taller.net.br, revagomes@gmail.com, royopa, sebas@taller.net.br, fabioluciano, adiel -->
<appendix xml:id="migration52" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Migrando do PHP 5.1.x para o PHP 5.2.x</title>
 <para>
  &manual.migration.seealso;
  <link linkend="migration5">5.0.x</link>,
  <link linkend="migration51">5.1.x</link>,
  <link linkend="migration53">5.3.x</link>,
  <link linkend="migration54">5.4.x</link>,
  <link linkend="migration55">5.5.x</link> e
  <link linkend="migration56">5.6.x</link>.
 </para>

 <section xml:id="migration52.changes">
  <title>O que mudou no PHP 5.2.x</title>
  <para>
   Muitas melhorias no PHP 5.2.x não tem impacto em códigos existentes. Há
   <link linkend="migration52.incompatible">poucas incompatibilidades</link>
   e <link linkend="migration52.error-messages">novas mensagens de erro</link>
   que devem ser consideradas. O código deve ser testado antes da atualização
   de versão do PHP em ambientes de produção.
  </para>
  <para>
   Se o sistema está sendo atualizado do PHP 5.0.x, a seção do manual entitulada
   <link linkend="migration51">Notas de atualização para o PHP 5.1.x</link>
   também deve ser lida.
  </para>
  <para>
   Igualmente, se o sistema está sendo atualizado do PHP 4, a seção do manual
   entitulada <link linkend="migration5">Migrando do PHP 4 para o PHP 5</link>
   também deve ser lida.
  </para>
 </section>

 <section xml:id="migration52.incompatible">
  <title>Mudanças de compatibilidade com versões anteriores.</title>
  <para>
   Embora muitos códigos existentes em PHP 5 funcionarem sem mudanças,
   você deve ter atenção nas seguintes mudanças de compatibilidade:
  </para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>getrusage</function> retorna &null; quando argumentos
     incompatíveis são passados, a partir do PHP 5.2.1.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>ZipArchive::setCommentName</function>
     retorna &true; em caso de sucesso, a partir do PHP 5.2.1.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>ZipArchive::setCommentIndex</function>
     retorna &true; em caso de sucesso, a partir do PHP 5.2.1.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>SplFileObject::getFilename</function> retorna
     o nome do arquivo, com o caminho absoluto, a partir do PHP 5.2.1.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Muda a prioridade da variável de ambiente <varname>PHPRC</varname> em Win32
    </simpara>
    <simpara>
     A variável de ambiente <varname>PHPRC</varname> agora tem prioridade sob o
     caminho armazenado nos registros do Windows.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     CLI SAPI no longer checks cwd for &php.ini; or the <filename>php-cli.ini</filename> file
    </simpara>
    <simpara>
     No PHP 5.1.x uma funcionalidade não documentada foi adicionada fazendo com que o
     binário verificasse o diretório atual para carregar o arquivo de configuração do PHP,
     gerando comportamentos imprevisíveis se um arquivo de configuração não esperado
     for carregado. Esta funcionalidade foi removida na versão 5.2.0, então o PHP não verifica
     mais a presença dos arquivos &php.ini; ou <filename>php-cli.ini</filename>.
     Veja também a seção <link linkend="features.commandline">linha de comando</link>
     no manual.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Adicionado um aviso quando forem executadas operações de módulo 0
    </simpara>
    <simpara>
     Em versões anteriores do PHP, ao executar uma operação de módulo 0 (% 0) com um inteiro
     não se emitia nenhuma mensagem de alerta, retornando um valor &false; inesperado.
     A partir do PHP 5.2.0, esta operação emitirá <constant>E_WARNING</constant>, como em todos
     os casos ao realizar divisões por zero.
    </simpara>
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
print 10 % 0;
/* Warning:  Division by zero in filename on line n */
?>
]]>
     </programlisting>
    </informalexample>
   </listitem>
   <listitem>
    <simpara>
     O <link linkend="object.tostring">__toString()</link> foi alterado para que possa ser
     chamado onde for aplicável.
    </simpara>
    <simpara>
     O método mágico <link linkend="object.tostring">__toString()</link> agora será chamado
     em contexto de string, ou seja, em qualquer objeto que seja utilizado como
     string.
    </simpara>
    <simpara>
     O fallback que retornava uma string contendo
     o identificador do objeto foi removido no PHP 5.2.0. Isto começou
     a ser um problema por que o identificador do objeto não poderia
     ser considerado único. Esta mudança significa que se sua aplicação está esperando
     este comportamento a mesma pode falhar. Na tentativa de utilizar o valor retornado
     quando o método não for aplicável agora resultará em um
     erro tratável.
    </simpara>
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
class foo {}
$foo = new foo;
print $foo;
/* Catchable fatal error:  Object of class foo could
   not be converted to string in filename on line n */
?>
]]>
     </programlisting>
    </informalexample>
    <simpara>
     Até com <link linkend="object.tostring">__toString()</link>, objetos não podem
     ser utilizados como indices ou chaves de um array. Posteriormente nós devemos adicionar
     uma funcionalidade embutida que dé suporte a isto, mas na versão 5.2.x você terá que
     fornecer seu próprio hashing ou a nova função do SPL
     <function>spl_object_hash</function>.
    </simpara>
    <simpara>
     Excessões não podem lançadas dentro do
     <link linkend="object.tostring">__toString()</link>.
    </simpara>
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
class foo {
    public function __toString() {
        throw new Exception;
    }
}

try {
    print new foo;
    /* Fatal error:  Method foo::__toString() must
       not throw an exception in filename on line n */
} catch(Exception $e) {}
?>
]]>
     </programlisting>
    </informalexample>
   </listitem>
   <listitem>
    <simpara>
     Funções de classes abstratas e estáticas foram removidas.
    </simpara>
    <simpara>
     Devido a um descuido nas versões 5.0.x e 5.1.x do PHP, foi permitido funções estáticas
     abstratas em classes. A partir do PHP 5.2.x, apenas as interfaces podem tê-las.
    </simpara>
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
abstract class foo {
    abstract static function bar();
    /* Strict Standards:  Static function foo::bar()
       should not be abstract in filename on line n */
}
?>
]]>
     </programlisting>
    </informalexample>
   </listitem>
   <listitem>
    <simpara>
     A <link linkend="ref.oci8">Extensão Oracle</link> requer, pelo menos, o Oracle
     10 no Windows.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Adicionado suporte RFC2397 (<literal>data:</literal> stream).
    </simpara>
    <simpara>
     A introdução do esquema de URL de dados podem levar uma
     mudança de comportamento no Windows. Se você estiver usando o sistema de arquivos <acronym>NTFS</acronym>
     e usar meta streams em sua aplicação, e se ocorrer de você
     usar um arquivo com o nome 'data:' ele será acessado
     sem o seu caminho - e não funcionará mais. Para corrigir isso use o protocolo 'file:'
     quando for acessá-lo.
    </simpara>
    <simpara>
     Veja também <link xlink:href="&url.rfc;2397">RFC 2397</link>
    </simpara>
    <informalexample>
     <programlisting role="php">
<![CDATA[
<?php
/* when allow_url_include is OFF (default) */
include "data:;base64,PD9waHAgcGhwaW5mbygpOz8+";
/* Warning:  include(): URL file-access is disabled
   in the server configuration in filename on line n */
?>
]]>
     </programlisting>
    </informalexample>
   </listitem>
   <listitem>
    <simpara>
     Regresssão no padrão <literal>glob()</literal>
    </simpara>
    <simpara>
     Na versão 5.2.4 uma correção de segurança causava uma regressão para os padrões
     na forma "/foo/*/bar/*". Desde a versão 5.2.5 ao invés de exibir um warninga função
     <literal>glob()</literal> retornará &false; quando
     as restrições <literal>openbase_dir</literal> forem violadas.
    </simpara>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="migration52.error-messages">
  <title>Novas mensagens de erro</title>
  <para>
   A seguir estão descritas as novas mensagens de erro que não foram discutidas em
   outras partes desse documento.
  </para>
  <para>
   <example>
    <title>No Core do PHP</title>
    <programlisting role="php">
<![CDATA[
<?php
echo " ";
session_regenerate_id();
/*  Warning:  session_regenerate_id(): Cannot regenerate
    session id - headers already sent in filename on line n */

str_word_count("string", 4);
/* Warning:  str_word_count(): Invalid format value 4
   in filename on line n */

strripos("foo", "f", 4);
/* Notice:  strripos(): Offset is greater than the
   length of haystack string in filename on line n */

strrpos("foo", "f", 4);
/* Notice:  strrpos(): Offset is greater than the
   length of haystack string in filename on line n */

/* As of PHP 5.2.1, when allow_url_include is OFF (default) */
include "php://input";
/* Warning:  include(): URL file-access is disabled
   in the server configuration in filename on line n */
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><link linkend="language.oop5">Código orientado a objetos</link> no Core do PHP</title>
    <programlisting role="php">
<![CDATA[
<?php
interface foo {
}
class bar implements foo, foo {
}
/* Fatal error: Class bar cannot implement previously
   implemented interface foo in filename on line n */


class foo {
    public $bar;
    function __get($var)
    {
        return $this->bar;
    }
}

$foo = new foo;
$bar =& $foo->prop;
/* Notice: Indirect modification of overloaded property
   foo::$prop has no effect in filename on line n */


class foo implements iterator {
    public function current() {
    }
    public function next() {
    }
    public function key() {
    }
    public function valid() {
    }
    public function rewind() {
    }
}

$foo = new foo();
foreach($foo as &$ref) {}
/* Fatal error: An iterator cannot be used with foreach
   by reference in filename on line n */


class foo {
    private function __construct() {
    }
}
class bar extends foo {
    public function __construct() {
        parent::__construct();
        /* Fatal error:  Cannot call private
           foo::__construct() in filename on line n */
    }
}
new bar;


stream_filter_register("", "class");
/* Warning:  stream_filter_register(): Filter name
   cannot be empty in filename on line n */


stream_filter_register("filter", "");
/* Warning:  stream_filter_register(): Class name
   cannot be empty in filename on line n */
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Na extensão <link linkend="ref.bzip2">bzip2</link></title>
    <programlisting role="php">
<![CDATA[
<?php
bzopen("", "w");
/* Warning:  bzopen(): filename cannot be empty
   in filename on line n */

bzopen("foo", "a");
/* Warning:  bzopen(): 'a' is not a valid mode for
   bzopen(). Only 'w' and 'r' are supported in
   filename on line n */

$fp = fopen("foo", "w");
bzopen($fp, "r");
/* Warning:  bzopen(): cannot read from a stream
   opened in write only mode in filename on line n */
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Na extensão <link linkend="ref.datetime">datetime</link></title>
    <programlisting role="php">
<![CDATA[
<?php
strtotime("today", "now");
/* Warning:  strtotime() expects parameter 2 to be
   long, string given in filename on line n */

/* As of PHP 5.2.1 */
new DateTime(new stdclass);
/* Fatal error: Uncaught exception 'Exception' with
   message 'DateTime::__construct() expects parameter
   1 to be string, object given' in filename:n */
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Na extensão <link linkend="ref.dbase">dBase</link></title>
    <programlisting role="php">
<![CDATA[
<?php
dbase_open("foo", -1);
/* Warning: Invalid access mode -1 in filename on line n */

/* As of PHP 5.2.1 */
dbase_open("foo", null);
/* Warning: The filename cannot be empty in filename on line n */
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Na extensão <link linkend="ref.mcrypt">mcrypt</link></title>
    <programlisting role="php">
<![CDATA[
<?php
$key = "this is a secret key";
$td = mcrypt_module_open('tripledes', '', 'ecb', '');
$iv = mcrypt_create_iv (mcrypt_enc_get_iv_size($td),
                        MCRYPT_RAND);
mcrypt_generic_init($td, $key, $iv);
$encrypted_data = mcrypt_generic($td, "");
/* Warning: mcrypt_generic(): An empty string was
   passed in filename on line n */
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Na extensão <link linkend="ref.oci8">oci8</link></title>
    <programlisting role="php">
<![CDATA[
<?php
oci_connect("user", "pass", "db", "bogus_charset");
/* Warning: Invalid character set name:
   bogus_charset in filename on line n */

$oci = oci_connect("user", "pass", "db");
oci_password_change($oci, "", "old", "new");
/* Warning: username cannot be empty in filename
   on line n */

oci_password_change($oci, "user", "", "new");
/* Warning: old password cannot be empty in filename
   on line n */

oci_password_change($oci, "user", "old", "");
/* Warning: new password cannot be empty in filename
   on line n */
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Na extensão <link linkend="ref.spl">SPL</link></title>
    <programlisting role="php">
<![CDATA[
<?php
$obj = new SplFileObject(__FILE__);
$obj->fgetcsv("foo");
/* Warning:  SplFileObject::fgetcsv(): delimiter must
   be a character in filename on line n */

$obj->fgetcsv(",", "foo");
/* Warning:  SplFileObject::fgetcsv(): enclosure must
   be a character in filename on line n */
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Na extensão <link linkend="ref.sem">Semaphore</link> (sysvmsg)</title>
    <programlisting role="php">
<![CDATA[
<?php
/* Warning:  maximum size of the message has to be
   greater then zero in filename on line n */
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Um exemplo de <link linkend="ref.zip">Zip</link> no PHP 5.2.1+</title>
    <programlisting role="php">
<![CDATA[
<?php
$obj = new ZipArchive();
$obj->open('archive.zip');
$obj->setCommentName('', 'comment');
/* Notice:  ZipArchive::setCommentName(): Empty string
   as entry name in filename on line n */

/* As of PHP 5.2.1 */
$obj->getCommentName('');
/* Notice:  ZipArchive::getCommentName(): Empty string
   as entry name in filename on line n */
?>
]]>
    </programlisting>
   </example>
  </para>
 </section>

 <section xml:id="migration52.datetime">
  <title>Mudanças no suporte a <link linkend="ref.datetime">datetime</link>
  no PHP</title>

  <para>
   Desde o PHP 5.1.0 existia uma extensão interna chamada <literal>date</literal>.
   Essa é a nova implementação do suporte a datas e horas.
   Embora a linguagem tentará adivinhar a timezone de seu sistema, você deverá
   definir a timezone manualmente. Voce pode fazer isso de uma das três formas:
  </para>
  <itemizedlist>
   <listitem>
    <simpara>
     em seu &php.ini; usando a diretiva
     <link linkend="ini.date.timezone">date.timezone</link>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     no seu sistema usando a variável de ambiente <varname>TZ</varname>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     no seu script usando a função
     <function>date_default_timezone_set</function>
    </simpara>
   </listitem>
  </itemizedlist>
  <para>
   Todas as <link linkend="timezones">timezones</link> suportadas são listadas
   no Manual do PHP.
  </para>
  <para>
   Com o advento do PHP 5.2.x, existem representações de <type>objetos</type> de data e timezone,
   chamados <literal>DateTime</literal> e <literal>DateTimeZone</literal> respectivamente.
   Os métodos mapeiam as funções procedurais de data já existentes.
  </para>
 </section>

 <section xml:id="migration52.parameters">
  <title>Novos parâmetros</title>
  <para>
   Algumas funções ganharam parâmetros opcionais novos no PHP 5.2.x:
  </para>

  <para>Core do PHP:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>htmlentities</function>
     - adicionado <parameter>double_encode</parameter> no PHP 5.2.3.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>htmlspecialchars</function>
     - adicionado <parameter>double_encode</parameter> no PHP 5.2.3.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>base64_decode</function>
     - adicionado <parameter>strict</parameter>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>setcookie</function>
     - adicionado <parameter>httponly</parameter>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>setrawcookie</function>
     - adicionado <parameter>httponly</parameter>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>session_set_cookie_params</function>
     - adicionado <parameter>httponly</parameter>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>memory_get_usage</function>
     - adicionado <parameter>real_usage</parameter>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>get_loaded_extensions</function>
     - adicionado <parameter>zend_extensions</parameter> no PHP 5.2.4
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.curl">curl</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>curl_multi_info_read</function>
     - adicionado <parameter>msgs_in_queue</parameter>
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.datetime">datetime</link></para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>date</function>
     - adicionado o caracterer de formatação "u" (millisegundos) no PHP 5.2.2
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.imap">imap</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>imap_open</function>
     - adicionado <parameter>n_retries</parameter>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>imap_reopen</function>
     - adicionado <parameter>n_retries</parameter>
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.mbstring">mbstring</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>mb_strrpos</function>
     - adicionado <parameter>offset</parameter>
    </simpara>
    <warning>
     <simpara>
      O parãmetro <parameter>offset</parameter> foi colocado na posição onde parâmetro
      <parameter>encoding</parameter> estava.
      A compatibilidade com versões anteriores foi disponibilizada
      permitindo que o <parameter>encoding</parameter> seja especificado
      como terceiro parâmetro. Usar esse modo não é recomendado pois
      ele será removido em uma versão futura do PHP.
     </simpara>
    </warning>
   </listitem>
  </itemizedlist>

  <para>ming:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>SWFMovie::streamMP3</function>
     - adicionado <parameter>skip</parameter> no PHP 5.2.1
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.openssl">openssl</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>openssl_verify</function>
     - adicionado <parameter>signature_algo</parameter>
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.pgsql">pgsql</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>pg_escape_bytea</function>
     - adicionado <parameter>connection</parameter>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>pg_escape_string</function>
     - adicionado <parameter>connection</parameter>
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.simplexml">simplexml</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>SimpleXMLElement::__construct</function>
      - adicionado <parameter>is_prefix</parameter>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>SimpleXMLElement::attributes</function>
     - adicionado <parameter>is_prefix</parameter>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>SimpleXMLElement::children</function>
     - adicionado <parameter>is_prefix</parameter>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>simplexml_load_file</function>
     - adicionado <parameter>is_prefix</parameter>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>simplexml_load_string</function>
     - adicionado <parameter>is_prefix</parameter>
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.spl">spl</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     array iterator_to_array(Traversable it [, bool use_keys = true])
     - adicionado <parameter>use_keys</parameter> in PHP 5.2.1
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="book.xmlreader">xmlreader</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>XMLReader::open</function>
     - adicionado <parameter>encoding</parameter>
     e <parameter>options</parameter>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>XMLReader::XML</function>
     - adicionado <parameter>encoding</parameter>
     e <parameter>options</parameter>
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.xmlwriter">XMLWriter</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>xmlwriter_write_element</function>
     - o parâmetro <parameter>content</parameter> tornou-se opcional no PHP 5.2.3
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>xmlwriter_write_element_ns</function>
     - o parâmetro <parameter>content</parameter> tornou-se opcional no PHP 5.2.3
    </simpara>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="migration52.functions">
  <title>Novas Funções</title>
  <para>
   O PHP 5.2.x introduziu algumas novas funções:
  </para>

  <para>No Core do PHP:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>array_fill_keys</function>
     - Cria um array usando os elementos do primeiro parâmetro como chave,
     cada um inicializado com <literal>val</literal>.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>error_get_last</function>
     - Obtém o último erro ocorrido como um array associativo. Retorna &null;
     se ainda não houve um erro
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>image_type_to_extension</function>
     - Obtém a extensão do arquivo para o tipo de imagem retornado pelas funções
     <function>getimagesize</function>, <function>exif_read_data</function>,
     <function>exif_thumbnail</function>, <function>exif_imagetype</function>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>memory_get_peak_usage</function>
     - Retorna o pico da quantidade de memória alocada pelo PHP
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>sys_get_temp_dir</function>
     - Retorna o caminho do diretório usado para arquivos temporários. (Adicionado no PHP 5.2.1)
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>timezone_abbreviations_list</function>
     - Retorna um array associativo contendo DST, offset e o nome do timezone
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>timezone_identifiers_list</function>
     - Retorna um array indexado numericamente com todos os identificadores de timezone
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>timezone_name_from_abbr</function>
     - Retorna o nome do timezone a partir de sua abreviatura
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>stream_socket_shutdown</function>
     - Faz com que toda ou parte de uma conexão full-duplex no socket
     associado com a stream seja encerrado. Disponível a partir do PHP 5.2.1.
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.image">Image</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>imagegrabscreen</function>
     - Gera um screenshot da tela inteira. Disponível a partir do PHP 5.2.2.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>imagegrabwindow</function>
     - Captura uma janela. Disponível a partir do PHP 5.2.2.
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="book.libxml">libXML</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>libxml_disable_entity_loader</function>
     - Desabilita o carregamento de entidades externas. Disponível a partir do PHP 5.2.11.
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.mbstring">mbstring</link>:</para>
  <itemizedlist>
   <!--
   FIXME: Apparently these two never made it into a release
          see bug#41070
   <listitem>
    <simpara>
     <function>mb_list_encodings_alias_names</function>
     - Returns an array of all supported entity encodings
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>mb_list_mime_names</function>
     - Returns an array or string of all supported mime names
    </simpara>
   </listitem>
   -->
   <listitem>
    <simpara>
     <function>mb_stripos</function>
     - Encontra a posição da primeira ocorrência de uma string dentro de outra,
     case insensitive
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>mb_stristr</function>
     - Encontra a primeira ocorrência de uma string dentro de outra, case insensitive
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>mb_strrchr</function>
     - Encontra a última ocorrência de um caractere dentro de uma string
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>mb_strrichr</function>
     - Encontra a última ocorrência de um caractere dentro de uma string,
     case insensitive
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>mb_strripos</function>
     - Encontra a posição da última ocorrência de uma string dentro de outra,
     case insensitive
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>mb_strstr</function>
     - Encontra a primeira ocorrência de uma string dentro de outra.
    </simpara>
   </listitem>
  </itemizedlist>

  <para>ming (A partir do PHP 5.2.1):</para>
  <itemizedlist>
   <listitem>
    <simpara>
     void ming_setSWFCompression(int num)
     - Define a compressão de saída
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     void swfmovie::namedanchor(string name)
     - Cria um link
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     void swfmovie::protect([string password])
     - Protege
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.openssl">openssl</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>openssl_csr_get_public_key</function>
     - Extrai a chave pública de um CERT e a prepara para uso
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>openssl_csr_get_subject</function>
     - Retorna o assunto de um certificado
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>openssl_pkey_get_details</function>
     - Retorna um array com os detalhes da chave (bits, pkey, type)
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.spl">spl</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>spl_object_hash</function>
     - Retorna a identificação hash do objeto dado
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     int iterator_apply(Traversable it, mixed function [, mixed params])
     - Chama uma função para cada elemento em um iterator
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.pcre">pcre</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>preg_last_error</function>
     - Retorna o código de erro da última execução regex
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.pgsql">pgsql</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>pg_field_table</function>
     - Retorna o nome da tabela na qual o campo pertence ou o oid da tabela
     if <literal>oid_only</literal> is &true;
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.posix">posix</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>posix_initgroups</function>
     - Calcula a lista de acesso de grupo para o usuário especificado no nome
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.gmp">gmp</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>gmp_nextprime</function>
     - Localiza o próximo número primo
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.xmlwriter">xmlwriter</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>xmlwriter_full_end_element</function>
     - Fecha o elemento atual - retorna &false; em caso de erro
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>xmlwriter_write_raw</function>
     - Escreve texto - retorna &false; em caso de erro
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>xmlwriter_start_dtd_entity</function>
     - Cria o ínicio de uma entidade DTD - retorna &false; em caso de erro
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>xmlwriter_end_dtd_entity</function>
     - Fecha a entidade DTD atual - retorna &false; em caso de erro
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>xmlwriter_write_dtd_entity</function>
     - Excreve uma tag de entidade DTD completa - retorna &false; em caso de erro
    </simpara>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="migration52.methods">
  <title>Novos métodos</title>
  <para>
   Novos métodos foram introduzidos no PHP 5.2.0:
  </para>

  <para><link linkend="book.dom">dom</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <function>DOMDocument::registerNodeClass</function>
     - Registra uma classe estendida usada para criar um tipo de nó base
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>DOMElement::setIDAttribute</function>
     - Declara o atributo especificado pelo nome para ser do tipo ID
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>DOMElement::setIDAttributeNode</function>
     - Declara o atributo especificado pelo nó para ser do tipo ID
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <function>DOMElement::setIDAttributeNS</function>
     - Declara o atributo especificado pelo nome local e pelo URI do namespace para ser
     do tipo ID
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <methodname>DOMNode::C14N</methodname>([bool exclusive [, bool with_comments [, array xpath [, array ns_prefixes]]]])
     - Canoniza os nós para uma string
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <methodname>DOMNode::C14NFile</methodname>(string uri [, bool exclusive [, bool with_comments [, array xpath [, array ns_prefixes]]]])
     - Canoniza os nós para um arquivo
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <methodname>DOMNode::getNodePath</methodname>()
     - Obtém um <literal>xpath</literal> para um nó
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.soap">soap</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <methodname>SoapServer::setObject</methodname>(object obj)
     - Define o objeto que seja manipulado pelas requisições SOAP
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.spl">spl</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     int <methodname>ArrayObject::asort</methodname>(void)
     - Organiza as entradas pelos valores
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     int <methodname>ArrayObject::ksort</methodname>(void)
     - Organiza as entradas pelas chaves
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     int <methodname>ArrayObject::natcasesort</methodname>(void)
     - Organiza as entradas pelas chaves usando o algoritmo case insensitive
     de "ordem natural"
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     int <methodname>ArrayObject::natsort</methodname>(void)
     - Organiza as entradas por valores usando o algoritmo de "ordem natural".
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     int <methodname>ArrayObject::uasort</methodname>(callback cmp_function)
     - Organiza as entradas por valores usando uma função definida pelo usuário
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     int <methodname>ArrayObject::uksort</methodname>(callback cmp_function)
     - Organiza as entradas por chaves  usando uma função definida pelo usuário.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     ArrayIterator <methodname>AppendIterator::getArrayIterator</methodname>()
     - Obem acesso ao <literal>ArrayIterator</literal> interno
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     int <methodname>AppendIterator::getIteratorIndex</methodname>()
     - Obtém o índice do iterator
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     bool <methodname>CachingIterator::getCache</methodname>()
     - Retorna o cache
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     int <methodname>CachingIterator::getFlags</methodname>()
     - Retorna o sinalizador interno
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     bool <methodname>CachingIterator::offsetExists</methodname>(mixed index)
     - Retorna &true; se o índice solicitado existir
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     string <methodname>CachingIterator::offsetGet</methodname>(mixed index)
     - Retorna o cache interno de usado
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     void <methodname>CachingIterator::offsetSet</methodname>(mixed index, mixed newval)
     - Define o índice dado no cache
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     void <methodname>CachingIterator::offsetUnset</methodname>(mixed index)
     - Remove o índice dado no cache
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     void <methodname>CachingIterator::setFlags</methodname>()
     - Define o sinalizador interno
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     array("delimiter" =>, "enclosure" =>) <methodname>SplFileObject::getCsvControl</methodname>(void)
     - Obtém o delimitador e o enclosure usado na função <function>fgetcsv</function>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     void <methodname>SplFileObject::setCsvControl</methodname>([string delimiter = ',' [, string enclosure = '"']])
     - Define o delimitador e o enclosure usado na função <function>fgetcsv</function>
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.tidy">Tidy</link></para>
  <itemizedlist>
   <listitem>
    <simpara>
     tidyNode <methodname>tidyNode::getParent</methodname>()
     - Retorna o nó pai do nó atual (Adicionado no PHP 5.2.2)
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="book.xmlreader">XMLReader</link></para>
  <itemizedlist>
   <listitem>
    <simpara>
     boolean <function>XMLReader::setSchema</function>
     - Usa o esquema W3C XSD para validar o documento da forma como ele é processado. A Ativação
     somente é possível antes do primeiro <function>XMLReader::read</function>
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.zip">zip</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <methodname>ZipArchive::addEmptyDir</methodname>()
     - Cria um diretório vazio no arquivo
    </simpara>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="migration52.removed-extensions">
  <title>Removed Extensions</title>
  <para>
   Essas extensões foram movidas para a PECL e não fazem mais parte da
   distribuição do PHP. As versões do pacote PECL para essas extensões
   serão criadas de acordo com a demanda de utilização do usuário.
  </para>
  <itemizedlist>
   <listitem>
    <simpara>
     <link linkend="ref.filepro">filePro</link>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Hyperwave API
    </simpara>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="migration52.new-extensions">
  <title>Novas Extensões</title>
  <para>
   As seguintes extensões foram adicionadas (por padrão) a partir da versão de PHP 5.2.0:
  </para>
  <itemizedlist>
   <listitem>
    <simpara>
     <link linkend="ref.filter">Filter</link>
     - valida e filtra dados e é designado para ser usado com dados inseguros, como
     input de dados do usuário. Essa extensão está habilitada por padrão; o modo padrão RAW
     não impacta o input de dados de nenhuma forma.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="ref.json">JSON</link>
     - implementa o formato de intercâmbio de dados JavaScript Object Notation
     (JSON). Essa extensão vem habilitada por padrão.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="ref.zip">Zip</link>
     - permite ler ou escrever de forma transparente arquivos compactados ZIP
     e arquivos dentro deles.
    </simpara>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="migration52.classes">
  <title>Novas Classes</title>
  <para>
   As seguintes classes foram introduzidas no PHP 5.2.0:
  </para>
  <itemizedlist>
   <listitem>
    <simpara>
     <link linkend="ref.datetime">DateTime</link>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="ref.datetime">DateTimeZone</link>
    </simpara>
   </listitem>

   <listitem>
    <simpara>
     RegexIterator - extends <classname>FilterIterator</classname>;
     implements <classname>Iterator</classname>, <classname>Traversable</classname>,
     <classname>OuterIterator</classname>
    </simpara>
    <simpara>
     Constants:
    </simpara>
    <itemizedlist>
     <listitem>
      <simpara>
       <constant>RegexIterator::ALL_MATCHES</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>RegexIterator::GET_MATCH</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>RegexIterator::MATCH</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>RegexIterator::REPLACE</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>RegexIterator::SPLIT</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>RegexIterator::USE_KEY</constant>
      </simpara>
     </listitem>
    </itemizedlist>
    <simpara>
     Properties:
    </simpara>
    <itemizedlist>
     <listitem>
      <simpara>
       public <property>replacement</property>
      </simpara>
     </listitem>
    </itemizedlist>
    <simpara>
     Methods:
    </simpara>
    <itemizedlist>
     <listitem>
      <simpara>
       RegexIterator::__construct(Iterator it, string regex [, int mode [, int flags [, int preg_flags]]])
       - Cria um <literal>RegexIterator</literal> de outro iterator e uma expressão regular
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       bool RegexIterator::accept()
       - Combina a (string)current() contra uma expressão regular
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       bool RegexIterator::getFlags()
       - Retorna o sinalizador de operação atual
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       bool RegexIterator::getMode()
       - Retorna o modo de operação atual
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       bool RegexIterator::getPregFlags()
       - Retorna o sinalizador PREG atual (se estiver em uso ou &null;)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       bool RegexIterator::setFlags(int new_flags)
       - Define o sinalizador da operação
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       bool RegexIterator::setMode(int new_mode)
       - Define um novo modo de operação
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       bool RegexIterator::setPregFlags(int new_flags)
       - Define o sinalizador PREG
      </simpara>
     </listitem>
    </itemizedlist>
   </listitem>

   <listitem>
    <simpara>
     RecursiveRegexIterator
    </simpara>
    <simpara>
     Constants:
    </simpara>
    <itemizedlist>
     <listitem>
      <simpara>
       <constant>RecursiveRegexIterator::ALL_MATCHES</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>RecursiveRegexIterator::GET_MATCH</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>RecursiveRegexIterator::MATCH</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>RecursiveRegexIterator::REPLACE</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>RecursiveRegexIterator::SPLIT</constant>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <constant>RecursiveRegexIterator::USE_KEY</constant>
      </simpara>
     </listitem>
    </itemizedlist>
    <simpara>
     Methods:
    </simpara>
    <itemizedlist>
     <listitem>
      <simpara>
       RecursiveRegexIterator::__construct(RecursiveIterator it, string regex [, int mode [, int flags [, int preg_flags]]])
       - Cria um <literal>RecursiveRegexIterator</literal> de outro iterator recursivo
       e uma expressão regular
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       RecursiveRegexIterator RecursiveRegexIterator::getChildren()
       - Retorna o iterador filho interno contido em um
       <literal>RecursiveRegexIterator</literal>
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       bool RecursiveRegexIterator::hasChildren()
       - Verifica se o elemento atual do iterator interno tem filhos
      </simpara>
     </listitem>
    </itemizedlist>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="migration52.global-constants">
  <title>Novas Constantes Globais</title>

  <para>PHP Core:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <constant>M_EULER</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>M_LNPI</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>M_SQRT3</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>M_SQRTPI</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>PATHINFO_FILENAME</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>PREG_BACKTRACK_LIMIT_ERROR</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>PREG_BAD_UTF8_ERROR</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>PREG_INTERNAL_ERROR</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>PREG_NO_ERROR</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>PREG_RECURSION_LIMIT_ERROR</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>UPLOAD_ERR_EXTENSION</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>STREAM_SHUT_RD</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>STREAM_SHUT_WR</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>STREAM_SHUT_RDWR</constant>
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.curl">curl</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <constant>CURLE_FILESIZE_EXCEEDED</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLE_FTP_SSL_FAILED</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLE_LDAP_INVALID_URL</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLFTPAUTH_DEFAULT</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLFTPAUTH_SSL</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLFTPAUTH_TLS</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLFTPSSL_ALL</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLFTPSSL_CONTROL</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLFTPSSL_NONE</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLFTPSSL_TRY</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLOPT_FTP_SSL</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLOPT_FTPSSLAUTH</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLOPT_TCP_NODELAY</constant>
    </simpara>
    <simpara>
     Adicionadas no PHP 5.2.1.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLOPT_TIMEOUT_MS</constant>
    </simpara>
    <simpara>
     Adicionadas no PHP 5.2.3
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CURLOPT_CONNECTTIMEOUT_MS</constant>
    </simpara>
    <simpara>
     Adicionadas no PHP 5.2.3
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.gmp">GMP</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <constant>GMP_VERSION</constant>
    </simpara>
    <simpara>
     Adicionadas no PHP 5.2.2.
    </simpara>
   </listitem>
  </itemizedlist>

  <para>ming:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <constant>SWFTEXTFIELD_USEFONT</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWFTEXTFIELD_AUTOSIZE</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_NOT_COMPRESSED</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_ADPCM_COMPRESSED</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_MP3_COMPRESSED</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_NOT_COMPRESSED_LE</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_NELLY_COMPRESSED</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_5KHZ</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_11KHZ</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_22KHZ</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_44KHZ</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_8BITS</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_16BITS</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_MONO</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SWF_SOUND_STEREO</constant>
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.openssl">openssl</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <constant>OPENSSL_VERSION_NUMBER</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>OPENSSL_VERSION_TEXT</constant>
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.snmp">snmp</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <constant>SNMP_OID_OUTPUT_FULL</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SNMP_OID_OUTPUT_NUMERIC</constant>
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.sem">Semaphore</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <constant>MSG_EAGAIN</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>MSG_ENOMSG</constant>
    </simpara>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="migration52.class-constants">
  <title>Novas Constantes de Classes</title>

  <para><link linkend="intro.pdo">pdo</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <constant>PDO::ATTR_DEFAULT_FETCH_MODE</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>PDO::FETCH_PROPS_LATE</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>PDO::FETCH_KEY_PAIR</constant>
    </simpara>
    <simpara>
     Traz um result set de 2 colunas dentro de um array associativo. (Adicionada no PHP 5.2.3)
    </simpara>
   </listitem>
  </itemizedlist>

  <para><link linkend="ref.spl">spl</link>:</para>
  <itemizedlist>
   <listitem>
    <simpara>
     <constant>CachingIterator::FULL_CACHE</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>CachingIterator::TOSTRING_USE_INNER</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SplFileObject::READ_AHEAD</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SplFileObject::READ_CSV</constant>
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <constant>SplFileObject::SKIP_EMPTY</constant>
    </simpara>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="migration52.newconf">
  <title>Novas Diretivas INI de Configuração</title>
  <para>
   Novas &php.ini; diretivas introduzidas no PHP 5.2.0:
  </para>
  <itemizedlist>
   <listitem>
    <simpara>
     <link linkend="ini.allow-url-include">allow_url_include</link>
    </simpara>
    <simpara>
     Essa opção torna possível diferenciar entre operações de arquivos padrão e em
     arquivos remotos, e a inclusão de arquivos remotos. Enquanto o primeiro é geralmente
     desejável, o último pode ser um risco de segurança se usado de forma ingênua.
     A partir do PHP 5.2.0, você pode permitir operações de arquivos remotos enquanto
     não permite a inclusão de arquivos remotos nos scripts locais. Na
     verdade, essa é a
     configuração padrão.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="ini.pcre.backtrack-limit">pcre.backtrack_limit</link>
    </simpara>
    <simpara>
     Limite de backtracking do PCRE.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="ini.pcre.recursion-limit">pcre.recursion_limit</link>
    </simpara>
    <simpara>
     Limite de recursão do PCRE. Por favor, note que se você definir este valor
     para um número elevado, você pode consumir toda a pilha de processo
     disponível e, eventualmente causar um crash no PHP (devido ao atingimento
     do tamanho limite da pilha imposto pelo sistema operacional).
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="ini.session.cookie-httponly">session.cookie_httponly</link>
    </simpara>
    <simpara>
     Marca o cookie acessível apenas através do protocolo HTTP. Isso significa
     que o cookie não será acessível pelas linguagens de script, como o Javascript.
     Essa configuração pode efetivamente reduzir o roubo de identidade através de
     ataques XSS (mesmo não sendo suportado por todos os navegadores).
    </simpara>
   </listitem>
  </itemizedlist>
  <para>
   Novas diretivas no PHP 5.2.2:
  </para>
  <itemizedlist>
   <listitem>
    <simpara>
     <link linkend="ini.max-input-nesting-level">max_input_nesting_level</link>
    </simpara>
    <simpara>
     Limite o quão profundo as <link linkend="language.variables.external">variáveis
     de entrada</link> podem ser aninhadas, o padrão é 64.
    </simpara>
   </listitem>
  </itemizedlist>
 </section>

 <section xml:id="migration52.errorrep">
  <title>Relatório de Erros</title>
  <para>
   Algumas das condições <constant>E_ERROR</constant> existentes foram
   convertidas para algo que pudesse ser tratado com um manipulador de
   erros definidos pelo usuário. Se um <link
   linkend="errorfunc.constants"><constant>E_RECOVERABLE_ERROR</constant></link>
   não é tratado, ele vai se comportar da mesma maneira como o <constant>E_ERROR</constant>
   se comporta em todas as versões do PHP. Erros desse tipo são registrados como
   <literal>Catchable fatal error</literal>.
  </para>
  <para>
   Essa mudança significa que o valor da constante <constant>E_ALL</constant>
   <link linkend="ini.error-reporting">error_reporting</link> é
   agora 6143, onde o valor anterior era 2047. Como as constantes PHP
   não tem significado fora do PHP, em alguns casos o valor inteiro é usado
   de forma que terão de ser ajustados. Assim, por exemplo,
   definindo o modo error_reporting de qualquer arquivo
   <link linkend="apache.configuration">httpd.conf</link> ou
   <filename>.htaccess</filename>, o valor será alterado de acordo
   com o arquivo. O mesmo se aplica quando valores númericos são usados
   em vez de constantes nos scripts PHP.
  </para>
  <para>
   Como um efeito colateral de uma mudança feita para evitar que mensagens de erro
   se sobreponham quando <link linkend="ini.track-errors">track_errors</link> está
   <literal>On</literal>, agora é necessário retornar &false; a partir
   de manipuladores de erro definidos pelo usuário afim de preencher
   a variável <varname>$php_errormsg</varname>. Isso
   fornece um controle detalhado sobre os níveis de mensagens armazenadas.
  </para>
 </section>

 <section xml:id="migration52.other">
  <title>Outras Melhorias</title>
  <itemizedlist>
   <listitem>
    <simpara>
     Melhoria no gerenciador de memória e aumento de limite de memória padrão.
    </simpara>
    <simpara>
     O novo gerenciador de memória aloca menos memória e funciona mais rápido que sua
     encarnação anterior. Ele aloca memória do sistema em grandes blocos, e então
     gerencia o heap sozinho. O valor <literal>memory_limit</literal> no &php.ini; é
     verificado, não para cada chamada <literal>emalloc()</literal> (como antes), mas para os blocos
     atuais solicitados pelo sistema. Isso significa que <literal>memory_limit</literal> é muito mais
     preciso do que costumava ser, uma vez que o gerenciador de memória antigo não calculava
     toda a sobrecarga de memória utilizada pela biblioteca <literal>malloc</literal>.
    </simpara>
    <simpara>
     Graças a essa recém-descoberta precisão do uso de memória parece ter aumentado,
     embora na verdade não aumentou. Para acomodar esse aumento aparente, a configuração
     padrão do <literal>memory_limit</literal> também foi aumentada - de 8 para 16 megabytes.
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Adicionado suporte para construtores em interfaces para forçar a verificação
     da assinatura em implementações.
    </simpara>
    <simpara>
     A partir do PHP 5.2.0, as interfaces podem ter construtores. No entanto, se você escolher
     declarar um construtor em uma interface, cada classe que implementa a interface
     DEVE incluir um construtor com a assinatura correspondente ao construtor da
     interface base. Por 'assinatura' queremos dizer que os parâmetros e as definições
     de tipo de retorno, incluindo qualquer type hint, inclusive se os dados são passados
     por referência ou por valor.
    </simpara>
   </listitem>
  </itemizedlist>
 </section>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
